{"version":3,"sources":["component/footer.js","component/navbar.js","component/main.js","App.js","serviceWorker.js","index.js"],"names":["Footer","className","href","target","Navbar","class","Main","props","handleChange","event","a","this","setState","length","value","handleCheckbox1","checked","number","handleCheckbox2","small","handleCheckbox3","capital","handleCheckbox4","symbol","handleCheckbox5","ambigous","show","arr","state","ans","i","Math","floor","random","passward","handlerange","console","log","copy","copyText","document","getElementById","select","setSelectionRange","execCommand","onChange","e","type","onClick","id","row","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.15f8e431.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nfunction Footer(){\r\n    return (\r\n        <div className=\"jumbotron\">\r\n        <h1 className=\"display-5\">Github</h1>\r\n        <p className=\"lead\"><a href=\"https://github.com/Tarun200999/passwordgenerator035\" target=\"_blank\">PasswordGenerator(github repo)</a></p>\r\n      </div>\r\n    )\r\n    \r\n    }\r\nexport default Footer;","import React from \"react\";\r\nimport \"./navbar.css\";\r\n\r\nfunction Navbar() {\r\n  return (\r\n    <nav class=\"navbar navbar-default\">\r\n      <div class=\"container-fluid nav1\">\r\n        <div class=\"navbar-header\">\r\n          <a class=\"navbar-brand display-3 \" href=\"#\">\r\n            Password Generator\r\n          </a>\r\n        </div>\r\n        <ul class=\"nav navbar-nav\">\r\n          <li className=\"link\">\r\n            <a href=\"https://www.linkedin.com/in/tarun-459a68171/\" target=\"_blank\">Tarun</a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { Component } from 'react';\r\nimport \"./main.css\";\r\nclass Main extends Component {\r\n  constructor(props)\r\n  {\r\n    super(props);\r\n    this.state={\r\n       length:12,\r\n       number:\"\",\r\n       small:\"\",\r\n       capital:\"\",\r\n       symbol:\"\",\r\n       ambigous:\"\",\r\n       passward:\"\"\r\n       \r\n\r\n    }\r\n  }\r\n  handleChange=async function(event){\r\n   await this.setState({length:event.target.value})\r\n  }\r\n  handleCheckbox1= async function(event){\r\n    if(event.target.checked)\r\n    {\r\n     await this.setState({number:\"123456789\"})\r\n    }\r\n    else{\r\n      await this.setState({number:\"\"})\r\n    }\r\n  }\r\n  handleCheckbox2= async function(event){\r\n    if(event.target.checked)\r\n    {\r\n     await this.setState({small:\"abcdefghijklmnopqrstuvwxyz\"})\r\n    }\r\n    else{\r\n      await this.setState({small:\"\"})\r\n    }\r\n  }\r\n  handleCheckbox3= async function(event){\r\n    if(event.target.checked)\r\n    {\r\n     await this.setState({capital:\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"})\r\n    }\r\n    else{\r\n      await this.setState({capital:\"\"})\r\n    }\r\n  }\r\n  handleCheckbox4= async function(event){\r\n    if(event.target.checked)\r\n    {\r\n     await this.setState({symbol:\"@#$%\"})\r\n    }\r\n    else{\r\n      await this.setState({symbol:\"\"})\r\n    }\r\n  }\r\n  handleCheckbox5= async function(event){\r\n    if(event.target.checked)\r\n    {\r\n     await this.setState({ambigous:\"(){}<>:''-+[\\]*&^~!/\"})\r\n    }\r\n    else{\r\n      await this.setState({ambigous:\"\"})\r\n    }\r\n  }\r\n  show=()=>{\r\n    var arr=this.state.small+this.state.capital+this.state.symbol+this.state.ambigous+this.state.number;\r\n    var ans = ''; \r\n      for (var i = this.state.length; i > 0; i--) { \r\n                ans +=arr[Math.floor(Math.random() * arr.length)]; \r\n            }\r\n    if(arr.length===0)\r\n     this.setState({passward:\"NO CONDITIONS HAS BEEN APPLIED\"});\r\n     else\r\n     {\r\n       this.setState({passward:ans})\r\n     }\r\n\r\n  }\r\n  handlerange=(event)=>{\r\n    console.log(event.target.value)\r\n\r\n  }\r\n  copy=()=>{\r\n\r\n    var copyText = document.getElementById(\"textarea\");\r\n    copyText.select();\r\n    copyText.setSelectionRange(0, 99999);\r\n    document.execCommand(\"copy\");\r\n  }\r\n  render() { \r\n    return (\r\n      <div className=\"container main\">\r\n      <div className=\"row\">  \r\n    <div className=\"col-md-8 col-12\">\r\n        <h4 className=\"text-success\">Select the length of your password</h4>\r\n       \r\n       <select className=\"select\" value={this.state.value} onChange={(e)=>this.handleChange(e)}>\r\n           \r\n            <option value=\"12\">12</option>\r\n            <option value=\"13\">13</option>\r\n            <option value=\"14\">14</option>\r\n            <option value=\"15\">15</option>\r\n            <option value=\"16\">16</option>\r\n            <option value=\"17\">17</option>\r\n            <option value=\"18\">18</option>\r\n            <option value=\"19\">19</option>\r\n            <option value=\"20\">20</option>\r\n            <option value=\"21\">21</option>\r\n            <option value=\"22\">22</option>\r\n            <option value=\"23\">23</option>\r\n            <option value=\"24\">24</option>\r\n            <option value=\"25\">25</option>\r\n       </select>\r\n        <h3 className=\"text-secondary\">Enter Password Conditions</h3>\r\n        <input type=\"checkbox\"\r\n        onChange={(e)=>this.handleCheckbox1(e)} />    Include Numbers (e.g 1234567890 )\r\n        <br></br>\r\n         <input type=\"checkbox\" \r\n        onChange={(e)=>this.handleCheckbox2(e)}/>    Include LowerCase Letters ( e.g abcdefg..)\r\n        <br></br>\r\n         <input type=\"checkbox\"\r\n        onChange={(e)=>this.handleCheckbox3(e)}/>    Include UpperCase Letters (e.g ABCDEFG..)\r\n        <br></br>\r\n         <input type=\"checkbox\" \r\n        onChange={(e)=>this.handleCheckbox4(e)}/>    Include Symbols ( e.g. @#$% )\r\n        <br></br>\r\n        <input type=\"checkbox\"\r\n        onChange={(e)=>this.handleCheckbox5(e)}/>    Ambiguous Characters ( e.g. ([]()/\\'\"`~,;:.) )      \r\n        <br></br>\r\n        <br></br>\r\n        <button className=\"btn btn-primary\" onClick={this.show} >click me</button>\r\n       </div> \r\n\r\n       <div className=\"col-md-4 col-12\">\r\n\r\n           <br></br>\r\n          \r\n           <h4 className=\"text-primary\">Your Random Password</h4>\r\n           <textarea id=\"textarea\"className=\"form-control\"row=\"5\" value={this.state.passward}>\r\n           </textarea>\r\n           <br></br>\r\n           <button className=\"btn btn-success\" onClick={this.copy}>copy password</button>\r\n           <br></br>\r\n           <br></br>\r\n           <br></br><br></br><br></br><br></br><br></br><br></br><br></br><br></br><br></br>\r\n         \r\n       </div> \r\n       </div> \r\n    \r\n\r\n    \r\n\r\n       </div>\r\n    );\r\n  }\r\n}\r\n \r\nexport default Main;\r\n","import React from 'react';\nimport './App.css';\nimport Footer from './component/footer';\nimport Navbar from './component/navbar';\nimport Main from './component/main';\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n\n      <Navbar/>\n      <Main/>\n      <Footer/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}